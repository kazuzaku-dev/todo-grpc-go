// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package todo

import (
	"github.com/kazuzaku-dev/todo-grpc-go/internal/todo/controller"
	"github.com/kazuzaku-dev/todo-grpc-go/internal/todo/infrastructure/database"
	"github.com/kazuzaku-dev/todo-grpc-go/internal/todo/infrastructure/repository_impl"
	"github.com/kazuzaku-dev/todo-grpc-go/internal/todo/usecase/command"
)

// Injectors from wire.go:

func InitUserService() (*controller.UserServiceHandler, error) {
	db, err := database.NewDB()
	if err != nil {
		return nil, err
	}
	userRepositoryImpl := repository_impl.NewUserRepositoryImpl(db)
	createUserCommandHandler := command.NewCreateUserCommandHandler(userRepositoryImpl)
	updateUserCommandHandler := command.NewUpdateUserCommandHandler(userRepositoryImpl)
	userServiceHandler := controller.NewUserServiceHandler(createUserCommandHandler, updateUserCommandHandler)
	return userServiceHandler, nil
}

func InitTodoService() (*controller.ToDoServiceHandler, error) {
	toDoServiceHandler := controller.NewTodoServiceHandler()
	return toDoServiceHandler, nil
}
